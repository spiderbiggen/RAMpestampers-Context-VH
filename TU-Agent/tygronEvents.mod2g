use agentKnowledge as knowledge.

module tygronEvents {
	%%%%% Percept Processing %%%%%
	if percept(stakeholders(X)), bel(stakeholders(Y)) then delete(stakeholders(Y)) + insert(stakeholders(X)).
	if percept(settings(X)), bel(settings(Y)) then delete(settings(Y)) + insert(settings(X)).
	if percept(functions(X)), bel(functions(Y)) then delete(functions(Y)) + insert(functions(X)).
	if percept(buildings(X)), bel(buildings(Y)) then delete(buildings(Y)) + insert(buildings(X)).
	if percept(indicators(X)), bel(indicators(Y)) then delete(indicators(Y)) + insert(indicators(X)).
	if percept(lands(X)), bel(lands(Y)) then delete(lands(Y)) + insert(lands(X)).
	if percept(zones(X)), bel(zones(Y)) then delete(zones(Y)) + insert(zones(X)).
	if percept(requests(X)), bel(requests(Y)) then delete(requests(Y)) + insert(requests(X)).
	if percept(actions(X)), bel(actions(Y)) then delete(actions(Y)) + insert(actions(X)).

	%insert oldbuildings once
	if bel(no_old_buildings, buildings(X), get_old_buildings(Bag,X)) then insert(oldbuildings(Bag)) + delete(no_old_buildings).
	
	%Retrieve the indicatorlink for our stakeholder
	if bel(readIndicatorlink, stakeholders(X), member([stakeholder(_, 'TU', Budget, _), indicatorLink(_ ,Weights)], X))
		then insert(indicatorlink(Weights)) + delete(readIndicatorlink).
		
	%insert indicator when it doesn't exist at all
	forall bel(indicatorlink(Weights), member(indicatorWeights(Id, Name, Score), Weights), indicators(Indicators), member(indicator(Id, Current, Target), Indicators)), not(bel(indicator(Id, Name, _, Target)))
		do insert(indicator(Id, Name, Current, Target)).
	%update indicator when it does exist but is changed.
	forall percept(indicators(X)), bel(indicatorlink(Weights), member(indicatorWeights(Id, Name, Score), Weights), indicators(Indicators), member(indicator(Id, Current, Target), Indicators)), bel(indicator(Id, Name, OldCurrent, Target))
		do delete(indicator(Id, Name, OldCurrent, Target)) + insert(indicator(Id, Name, Current, Target)).
	
	%set up the goals for the indicators
	forall bel(indicator(Id, Name, Current, Target)), goal(getindicatorgoals)
		do adopt(indicatorgoal(Name, Target)).
}
